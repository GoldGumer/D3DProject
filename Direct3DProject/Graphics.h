#pragma once

#include <Windows.h>
#include <d3d11.h>
#include <directxmath.h>

#include "Object.h"

using namespace DirectX;

struct SimpleVertex
{
	XMFLOAT3 Pos;
	XMFLOAT4 Color;
};

struct ConstantMatrices 
{
	XMMATRIX world;
	XMMATRIX view;
	XMMATRIX projection;
};

class Graphics
{
public:
	Graphics();
	Graphics(HWND windowHandle);
	~Graphics();

	void UpdateScreen();
private:
	void InitBuffers();
	void InitShaders();

	void DrawObject(Object cube);

	void ClearBuffer(float rgb[3]) noexcept;

	//Cubes to be generated
	Object objects[3] =
	{
		Object(new float[3] { 0.0f, 0.0f, 5.0f }, new float[3] { 0.0f, 0.0f, XM_PIDIV2 }),
		Object(new float[3] { -5.0f, 0.0f, 5.0f }, new float[3] { 0.0f, 0.0f, XM_PIDIV2 }),
		Object(new float[3] { 5.0f, 0.0f, 5.0f }, new float[3] { 0.0f, 0.0f, XM_PIDIV2 })
	};

	//Background RGB
	float bgRGB[3] = { 0.25f,0.25f,0.25f };

	//World projection to screen
	XMMATRIX view;
	XMMATRIX projection;

	//Vertex list
	XMFLOAT3 vertices[68] =
	{
		{1.000000,-1.000000,-1.000000},
{-1.000000,-1.000000,-1.000000},
{1.000000,-1.000000,1.000000},
{-1.000000,-1.000000,1.000000},
{1.000000,1.000000,-1.000000},
{-1.000000,1.000000,-1.000000},
{1.000000,1.000000,1.000000},
{-1.000000,1.000000,1.000000},
{1.000000,-1.000000,-1.000000},
{1.000000,-1.000000,1.000000},
{1.000000,1.000000,-1.000000},
{1.000000,1.000000,1.000000},
{1.000000,-1.000000,-1.000000},
{1.000000,-1.000000,1.000000},
{1.000000,1.000000,-1.000000},
{1.000000,1.000000,1.000000},
{3.995938,-0.495081,-0.495081},
{3.995938,-0.495081,0.495081},
{3.995938,0.495081,-0.495081},
{3.995938,0.495081,0.495081},
{3.395023,-1.000000,1.000000},
{3.395023,1.000000,1.000000},
{3.395023,-1.000000,-1.000000},
{3.395023,1.000000,-1.000000},
{4.735524,-0.299742,-0.299742},
{4.735524,-0.299742,0.299742},
{4.735524,0.299742,-0.299742},
{4.735524,0.299742,0.299742},
{4.735524,-0.198478,-0.198478},
{4.735524,-0.198478,0.198478},
{4.735524,0.198478,-0.198478},
{4.735524,0.198478,0.198478},
{4.735524,-0.299742,0.299742},
{4.735524,0.299742,0.299742},
{4.735524,-0.299742,-0.299742},
{4.735524,0.299742,-0.299742},
{4.735524,-0.198478,-0.198478},
{4.735524,-0.198478,0.198478},
{4.735524,0.198478,-0.198478},
{4.735524,0.198478,0.198478},
{4.735524,-0.198478,-0.198478},
{4.735524,-0.198478,0.198478},
{4.735524,0.198478,-0.198478},
{4.735524,0.198478,0.198478},
{3.944849,-0.296086,-0.296086},
{3.944849,-0.296086,0.296086},
{3.944849,0.296086,-0.296086},
{3.944849,0.296086,0.296086},
{3.944849,-0.296086,-0.296086},
{3.944849,-0.296086,0.296086},
{3.944849,0.296086,-0.296086},
{3.944849,0.296086,0.296086},
{3.469413,-0.721811,-0.721811},
{3.469413,-0.721811,0.721811},
{3.469413,0.721811,-0.721811},
{3.469413,0.721811,0.721811},
{3.469413,-0.721811,-0.721811},
{3.469413,-0.721811,0.721811},
{3.469413,0.721811,-0.721811},
{3.469413,0.721811,0.721811},
{3.469413,-0.721811,-0.721811},
{3.469413,-0.721811,0.721811},
{3.469413,0.721811,-0.721811},
{3.469413,0.721811,0.721811},
{-0.272616,-0.721811,-0.721811},
{-0.272616,-0.721811,0.721811},
{-0.272616,0.721811,-0.721811},
{-0.272616,0.721811,0.721811}
	};

	//Colour list
	XMFLOAT4 colours[3] =
	{
		XMFLOAT4(0.5f, 1.0f, 1.0f, 1.0f),
		XMFLOAT4(1.0f, 0.5f, 1.0f, 1.0f),
		XMFLOAT4(1.0f, 1.0f, 0.5f, 1.0f)
	};

	//Vertex + Colour list
	SimpleVertex verCol[ARRAYSIZE(vertices)];

	//Index list
	WORD indices[396] =
	{
		1,11,9,
1,5,11,
3,8,4,
3,7,8,
7,6,8,
7,5,6,
2,8,6,
2,4,8,
1,4,2,
1,3,4,
5,2,6,
5,1,2,
11,16,15,
11,12,16,
7,10,12,
7,3,10,
5,12,11,
5,7,12,
3,9,10,
3,1,9,
15,23,13,
15,24,23,
12,14,16,
12,10,14,
9,15,13,
9,11,15,
10,13,14,
10,9,13,
17,26,18,
17,25,26,
13,21,14,
13,23,21,
16,24,15,
16,22,24,
14,22,16,
14,21,22,
20,21,18,
20,22,21,
18,23,17,
18,21,23,
19,22,20,
19,24,22,
17,24,19,
17,23,24,
27,34,36,
27,28,34,
20,27,19,
20,28,27,
18,28,20,
18,26,28,
19,25,17,
19,27,25,
29,39,37,
29,31,39,
28,33,34,
28,26,33,
25,36,35,
25,27,36,
26,35,33,
26,25,35,
32,33,30,
32,34,33,
30,35,29,
30,33,35,
31,34,32,
31,36,34,
29,36,31,
29,35,36,
39,44,43,
39,40,44,
30,37,38,
30,29,37,
31,40,39,
31,32,40,
32,38,40,
32,30,38,
42,48,44,
42,46,48,
40,42,44,
40,38,42,
37,43,41,
37,39,43,
38,41,42,
38,37,41,
47,52,51,
47,48,52,
43,45,41,
43,47,45,
41,46,42,
41,45,46,
44,47,43,
44,48,47,
52,55,51,
52,56,55,
48,50,52,
48,46,50,
45,51,49,
45,47,51,
46,49,50,
46,45,49,
55,60,59,
55,56,60,
50,56,52,
50,54,56,
51,53,49,
51,55,53,
49,54,50,
49,53,54,
57,63,61,
57,59,63,
56,58,60,
56,54,58,
53,59,57,
53,55,59,
54,57,58,
54,53,57,
64,67,63,
64,68,67,
58,61,62,
58,57,61,
59,64,63,
59,60,64,
60,62,64,
60,58,62,
67,66,65,
67,68,66,
62,68,64,
62,66,68,
63,65,61,
63,67,65,
61,66,62,
61,65,66
	};

	HWND windowHandle;

	ID3D11RenderTargetView* pRenderTarget;

	//Buffers
	ID3D11Buffer* pVertexBuffer;
	ID3D11Buffer* pIndexBuffer;
	ID3D11Buffer* pConstBuffer;

	//Shaders
	ID3D11VertexShader* pVertexShader;
	ID3D11PixelShader* pPixelShader;

	ID3D11InputLayout* pVertexLayout = nullptr;
	D3D11_VIEWPORT viewport;

	//D3D Comms
	ID3D11Device* pDevice = nullptr;
	IDXGISwapChain* pSwap = nullptr;
	ID3D11DeviceContext* pContext = nullptr;
};

